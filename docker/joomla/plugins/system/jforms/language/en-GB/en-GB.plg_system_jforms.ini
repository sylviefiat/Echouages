; @package		jForms
; @subpackage	plugin jForms
; @copyright	G. Tomaselli
; @author		Girolamo Tomaselli - http://bygiro.com - girotomaselli@gmail.com
; @license		GNU GPL v3 or later


PLG_SYSTEM_JFORMS="System - jForms"
PLG_SYSTEM_JFORMS_XML_DESCRIPTION="This plugin allows you to replace some special tags with the jForms data, ANYWHERE"
PLG_SYSTEM_JFORMS_LAYOUT_DEFAULT="Default"
PLG_SYSTEM_JFORMS_FIELD_TAG_CLOSE="Tag close"
PLG_SYSTEM_JFORMS_FIELD_TAG_CLOSE_DESC="this will be used to detect a closing tag for a form. example: {/jforms}"
PLG_SYSTEM_JFORMS_FIELD_TAG_OPEN="Tag open"
PLG_SYSTEM_JFORMS_FIELD_TAG_OPEN_DESC="this will be used to detect the placeholder. example: {jforms:3}"
PLG_SYSTEM_JFORMS_HOW_IT_WORKS="<h4>How it works</h4>
<p>Simple examples:</p>
<table class=\"table table-striped table-bordered table-condensed\">
<tbody>
<tr>
<td>{jforms:3}&nbsp;</td>
<td>&nbsp;This tag will be replaced by the form with ID 3.</td>
</tr>
<tr>
<td>{jforms:3 layout_type=single_form|show_title=1|name=My custom form!|description=bla bla bla bla bla bla}</td>
<td>
<p>In this case these options will override the options configured in the form. So this tag will show the form with ID 3, using a layout type Single form, etc. etc.</p>
<p>Each options must be separated by | the options must be in this format:&nbsp; attribute=value</p>
</td>
</tr>
<tr>
<td>{jforms:5 name=This is another example|preform=1}</td>
<td>
<p>This example shows you how to create a PRE-FORM, the data submitted through this form will autopopulate the full form. The user will be redirect to the full form page. Only the fields / fieldset with attribute showinpreform=\"true\" will be shown to the user (or the custom layout if any is configured for the form).</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Examples with custom layout:</p>
<table class=\"table table-striped table-bordered table-condensed\">
<tbody>
<tr>
<td>
<p>{jforms:5 layout_type=wizard}</p>
<p>{step:2}</p>
<p>{step:3}</p>
<p>{step:1}</p>
<p>{/jforms}</p>
</td>
<td>this example will show the form with ID 5 as wizard. as you can see there are also the wizard steps identified by ID, you can even change the order of your original form, the jForms will follow the order you give here. </td>
</tr>
<tr>
<td>&nbsp;
<p>{jforms:5 layout_type=wizard}</p>
<p>{step:2}</p>
<p>{step:3 name=Fantastic|description=please fill in this step}</p>
<p>{step:1}</p>
{/jforms}</td>
<td>&nbsp;this is the same like the one above, but there are some override options for the step with ID 3</td>
</tr>
<tr>
<td>&nbsp;
<p>{jforms:5 layout_type=wizard}</p>
<p>{step:2}</p>
<p>{step:3}</p>
<p>bla bla bla [[fields:my_fieldname:html:input]]</p>
<p>{/step}</p>
<p>{step:1}</p>
{/jforms}</td>
<td>&nbsp;here an example of custom step. the step with ID 3 will be the content between the opening tag {step:3} and the closing tag {/step}. Inside you can see there is another tag, that tag will show the field with fieldname \"my_fieldname\". Each field has the following properties:
<ul>
<li>[[fields:my_fieldname:label]]</li>
<li>[[fields:my_fieldname:input]]</li>
<li>[[fields:my_fieldname:output]] (this will show the submitted data, if any)</li>
<li>[[fields:my_fieldname:html:input]] (full field with label and input)</li>
<li>[[fields:my_fieldname:html:output]] (full field with label and output submitted data)</li>
</ul>
</td>
</tr>
<tr>
<td>&nbsp;
<p>{jforms:5 layout_type=wizard}</p>
<p>{step:2}</p>
<p>{step:3}</p>
<p>bla bla bla [[fields:my_fieldname:html:input]]</p>
<p>{/step}</p>
<p>{step:1}</p>
<p>&nbsp;</p>
<p>{fset:my_fieldset_name}</p>
{/jforms}</td>
<td>&nbsp;Here we have a tag {fset} it will show the full fieldset with name \"my fieldset_name\"</td>
</tr>
<tr>
<td>
<p>{jforms:2}</p>
<p>[[fields:my_fieldname:label]]</p>
<p>[[fields:my_fieldname:input]]</p>
<p>{/jforms}</p>
</td>
<td>you can also use just the tags for the single fields, and create your own layout.</td>
</tr>
</tbody>
</table>"